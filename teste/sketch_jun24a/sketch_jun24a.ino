#include "U8glib.h"

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NO_ACK);
 const uint8_t bullet[] U8G_PROGMEM = {
  0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 
  0x00, 0x3c, 0x00, 
  0xff, 0xff, 0xc0, 
  0xff, 0xff, 0xc0, 
  0x00, 0x3c, 0x00, 
  0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00,    
};

const uint8_t smile[] U8G_PROGMEM = {
  0x07, 0xfe, 0x00, 
  0x1e, 0x07, 0x80, 
  0x3c, 0x03, 0xc0, 
  0x70, 0x00, 0xe0, 
  0x60, 0x00, 0x60, 
  0xe0, 0x00, 0x70, 
  0xc6, 0x06, 0x30, 
  0x87, 0x0e, 0x10, 
  0x86, 0x06, 0x10, 
  0x80, 0x00, 0x10, 
  0x80, 0x00, 0x10, 
  0x88, 0x01, 0x10, 
  0x8c, 0x03, 0x10, 
  0xce, 0x07, 0x30, 
  0xe7, 0x0e, 0x70, 
  0x63, 0xfc, 0x60, 
  0x70, 0x00, 0xe0, 
  0x3c, 0x03, 0xc0, 
  0x1e, 0x07, 0x80, 
  0x07, 0xfe, 0x00,  
};

void setup(void) 
{
  pinMode(2, INPUT_PULLUP);  //Pino Eixo Z  
}
 
void loop(void) 
{
   u8g.firstPage();  
   float x, y;
   
   do
   { 
     x = analogRead(0); 
     y = analogRead(1); 
     u8g.drawBitmapP( (y/1024)*128-4, (x/1024)*64-4, 3, 20, smile);
     if (!digitalRead(2)) 
     {
      int i = 0;
      do{
        delay(100);
        u8g.drawBitmapP( (y/1024)*128+10*++i, (x/1024)*64, 3, 10, bullet);        
      }while(u8g.nextPage()&&i<10);
     }
   } while( u8g.nextPage() );
   //delay(50);
}
